#!/bin/sh

languages=( 'haskell' 'agda' 'ocaml' 'lisp' 'erlang' 'literatehaskell' 'scala' 'go' 'python' 'ruby' 'prolog' 'bash' 'c' 'cs' 'cpp' 'diff' 'java' 'javascript' 'lua' 'objectivec' 'perl' 'smalltalk' 'sql' 'tex')

# Automatic inferencing language from extension 
Channel=""
language=""
valid=1

getLanguage(){
    if [[ "$1" = "hs" ]]; then 
        language="haskell"
    elif [[ "$1" = "agda" ]]; then 
        language="agda"
    elif [[ "$1" = "lagda" ]]; then 
        language="lagda"
    elif [[ "$1" = "erl" ]]; then 
        language="erlang"
    elif [[ "$1" = "lhs" ]]; then 
        language="literatehaskell"
    elif [[ "$1" = "scala" ]]; then 
        language="scala"
    elif [[ "$1" = "py" ]]; then
        language="python"
    elif [[ "$1" = "rb" ]]; then 
        language="ruby"
    elif [[ "$1" = "sh" ]]; then 
        language="bash"
    elif [[ "$1" = "c" ]]; then 
        language="c"
    elif [[ "$1" = "cc" ]]; then 
        language="c"
    elif [[ "$1" = "cs" ]]; then 
        language="cs"
    elif [[ "$1" = "asmx" ]]; then 
        language="cs"
    elif [[ "$1" = "cpp" ]]; then 
        language="cpp"
    elif [[ "$1" = "cxx" ]]; then 
        language="cpp"
    elif [[ "$1" = "java" ]]; then 
        language="java"
    elif [[ "$1" = "jav" ]]; then 
        language="java"
    elif [[ "$1" = "j" ]]; then 
        language="java"
    elif [[ "$1" = "js" ]]; then 
        language="javascript"
    elif [[ "$1" = "lua" ]]; then 
        language="lua"
    elif [[ "$1" = "m" ]]; then 
        language="objectivec"
    elif [[ "$1" = "mm" ]]; then 
        language="objectivec"
    elif [[ "$1" = "pl" ]]; then 
        language="perl"
    elif [[ "$1" = "pm" ]]; then 
        language="perl"
    elif [[ "$1" = "sql" ]]; then 
        language="sql"
    elif [[ "$1" = "tex" ]]; then 
        language="tex"
    else 
        language=""
    fi
}


channels=('#haskell' '#xmonad' '#javascript' '#python' '#ruby' '#lisp' '#scala' '#agda' '#coffeescript' '#arc' '##c' '#clojure' '#scheme' '##prolog' '#emacs' '#hpaste' '#happs')

if [[ "$NICK" != "" ]]; then 
    author="$NICK"
else 
    author="$USER"
fi

# Helper Functions 

# Finds if the given array contains the given element 
# function element array
# Return 1 if found otherwise 0
containsElement() {
    for e in "${@:2}";
    do [[ "$e" = "$1" ]] && return 1; done 
    return 0 
}



if [ -f "$1" ]; then
    title=$(basename "$1")
    getLanguage "${title##*.}"
    paste="$1"
elif [ -f "$2" ]; then 
    title=$(basename $2)
    getLanguage "${title##*.}"
    paste="$2"
    containsElement "$1" "${languages[@]}" 
    retlang="$?"
    containsElement "$1" "${channels[@]}" 
    retchan="$?"
    if [[ "$retlang" = "1" ]]; then 
        language="$1"
    elif  [[ "$retchan" = "1" ]]; then 
        channel="$1"
    else 
        title="$1"
    fi 
elif [ -f "$3" ]; then 
    title=$(basename $3)
    getLanguage "${title##*.}"
    paste="$3"
    containsElement "$1" "${languages[@]}" 
    retlang1="$?"
    containsElement "$1" "${channels[@]}" 
    retchan1="$?"
    containsElement "$2" "${languages[@]}" 
    retlang2="$?"
    containsElement "$2" "${channels[@]}" 
    retchan2="$?"
    if [[ "$retlang1"="1" ]] && [[ "$retchan2"="1" ]]; then 
        language="$1"
        channel="$2"
    elif [[ "$retlang2"="1" ]]; then 
        title="$1"
        language="$2"
    elif [[ "$retchan2"="1" ]]; then 
        title=$(basename $1)
        channel="$2"
    else 
        valid=0
    fi
elif [ -f  "$4" ]; then
    title=$(basename $4)
    getLanguage "${title##*.}"
    paste="$4"
    containsElement "$2" "${languages[@]}" 
    retlang="$?"
    containsElement "$3" "${channels[@]}" 
    retchan="$?"
    if [[ "$retlang"="1" ]] && [[ "$retchan"="1" ]]; then 
        title="$1"
        language="$2"
        channel="$3"
    else 
        valid=0
    fi 
else
    valid=0
fi

if [[ "$valid" = 0 ]]; then 
    echo "Usage:"
    echo "           $0 [title] [language] [channel] filename"
    echo "           [arg] means arg is optional"
    echo ""
    echo "Example:"
    echo "           $0 \"My haskell example\" example.hs"
    echo "           Will paste the file with \"My haskell example\" as the title"
    echo "           If only title is given and it matches with a language name or channel name then it will be taken as a language name or channel name"
    echo ""
    echo "Languages:"
    echo "           ${languages[@]}"
    echo ""
    echo "Channels:"
    echo "           ${channels[@]}"
    echo ""
    echo "Defaults:"
    echo "           title : filename"
    echo "           language : haskell"
    echo "           channel : None"
    echo "           author : If \$NICK is defined then it is taken otherwise \$USER is taken"
else 
    #echo "title: $title"
    #echo "author: $author"
    #echo "language: $language"
    #echo "channel: $channel"
    #echo "paste: $paste"
    curl -w "%{redirect_url}" --compressed --data-urlencode "title=$title" --data-urlencode "author=$author" --data-urlencode "language=$language" --data-urlencode "channel=$channel" --data-urlencode "paste@$paste" -d "email=" -d "submit=Submit" "http://paste.tryhaskell.org/new"
    echo ""
fi
